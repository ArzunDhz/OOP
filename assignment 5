___________________________________1_________________________________-
#include <iostream>
using namespace std;

class Complex{
private:
    int real,imaginary;
public:
    int getdata(int a, int b){

    real = a;
    imaginary = b ;
    }

    int putdata(){
    cout<<real<<"+"<<imaginary<<"i"<<endl;
    }

  Complex sum(Complex c1,Complex c2){
              Complex c3;
              c3.real= c1.real+c2.real;
              c3.imaginary=c1.imaginary+c2.imaginary;

               return c3;
               }
};




int main(){
Complex C1,C2,C3;
int a,b,c,d;
cout<<"input real and imaginary for 1st:";
cin>>a>>b;
C1.getdata(a,b);
C1.putdata();
cout<<"input real and imaginary for 2nd:";
cin>>c>>d;
C2.getdata(c,d);
C2.putdata();


C3=C3.sum(C1,C2);
cout<<"Sum of i  real and imaginary  is ";
C3.putdata();





}


________2_______________________________________




#include <iostream>
#include <string.h>
using namespace std;

int c = 0;

class Account{
private:
int no,balance;

public:
void getdata(int a ,int b);
void display();
Account recieve(Account &a1, Account &a2);
Account send(Account &a1, Account &a2);
};


  void Account::getdata(int a ,int b){
  no = a;
  balance = b;
  display();
    }

  void Account::display(){
   cout<<"  Account no =  "<<no<<" balance = "<<balance<<endl;
}



Account Account ::send(Account &a1, Account &a2){
Account a4;
a4.balance=a1.balance;
 a4.no=a1.no;
if(a1.balance>=c){
 a4.balance=a1.balance-c;

    return a4;
}
else{
  cout<<"insuffient funds so there is no tranjaation"<<endl;
   return a4;
}

}

Account Account :: recieve(Account &a1, Account &a2){
Account a3;
a3.balance=a2.balance;
a3.no=a2.no;
if(a1.balance>=c){
a3.balance=a2.balance + c;
return a3;
}
else{
  return a3;

}
}

int main(){
Account A1,A2,A3,A4;
int m;
A1.getdata(1,50);
A2.getdata(2,25);
cout<<"money u want to send from 1st account to second account = ";
cin>>m;
c=m;
A4=A4.send(A1,A2);
A4.display();
A3=A3.recieve(A1,A2);
A3.display();
}

_________________________________________3___________________________________
#include<iostream>
using namespace std;

class Test{
private:
    int code,price;
public:

    int display(){
    cout<<"code = " <<code<<"\t price = "<<price<<endl;
    }


Test(int x , int y){
   code=x;
   price=y;
   display();

}
Test(Test &a){
code=a.code;
price=a.price;
display();
}



};

int main(){
cout<<"before copying"<<endl;
Test obj1(5,6);
cout<<"after copying"<<endl;
Test obj2=obj1;
}

__________________________4______________________________________________

#include<iostream>
using namespace std;

class Rectangle{
private:
    int lenght, breadth;
public:

    Rectangle(){
    lenght=0;
    breadth=0;
    display();

    }

    Rectangle(int a){
    lenght=a;
    breadth=5;
    display();
    }

    Rectangle(int a , int b ){
    lenght=a;
    breadth=b;
    display();
    }


    int display(){
    cout<<"area = "<<lenght*breadth<<endl;

    }

};
int main(){

    Rectangle A;
    Rectangle B(5,6);
    Rectangle C(5);

}
____________________________________5_______________________________________
#include<iostream>
using namespace std;
class AddAmount{
private:
 int amount = 50;
public:
    AddAmount(){
    display();
    }
    AddAmount(int a ){
    amount = amount+ a;
    display();
    }

    int display(){
    cout<<"the amount in the piggy bank = "<<amount<<endl;\
        }


};

int main(){
AddAmount A;
AddAmount B(70);

}

}
________________________________________6______________________________
#include<iostream>
using namespace std;
class Rectangle{
private:
    int length, breadth;
public:
    int getlenght(){
    cout<<"input value of lenght"<<endl;
    cin>>length;

    }
    int getbreadth(){
    cout<<"input the value of breadth = "<<endl;
    cin>>breadth;
    }

    int area( Rectangle A){
    cout<<"area = "<<length*A.breadth<<endl;

    }
};

int main(){
Rectangle L,B;
L.getlenght();
B.getbreadth();
L.area(B);

}


________________________________7_____________________________________

#include <iostream>
#include <string.h>

using namespace std;

class Employee
{
    int id, salary;
    char name[20];

public:
    Employee(int i, int s, char n[])
    {
        id = i;
        salary = s;
        strcpy(name, n);
    }

    void display()
    {
        if (salary > 5000)
            cout << id << "\t" << salary << "\t" << name << endl;
    }
};

int main()
{
    Employee e1(1, 4000, "ram");
    Employee e2(2, 5000, "anish");
    Employee e3(3, 6000, "gita");
    Employee e4(4, 7000, "shyam");
    Employee e5(5, 8000, "hari");
    cout << "\nEmployees data:\n\n";
    cout << "id\tsalary\tname\n";
    cout << "----------------------------" << endl;
    e1.display();
    e2.display();
    e3.display();
    e4.display();
    e5.display();
_________________8__________________________________________

#include<iostream>

using namespace std;


class Add {
private:
    int lenght , breadth ,area;
public:
    Add(int a , int b ){
    lenght=a;
    breadth=b;
    display();
    }

     Add(int a , int b, int c , int d ){
    area=2*(a+b)+2*(c+d);
    display2();
    }
    
   ~Add(){
   
   }
    int display(){
    cout<<" area is"<<2*(lenght+breadth)<<endl;
    }
    int display2(){
    cout<<" SUm of the area is"<<area<<endl;
    }
};

int main(){
    int a,b,c,d;
    cout<<"input lenght and breadth for 1st rectrangle"<<endl;
    cin>>a>>b;
    Add a1(a,b);
    cout<<"input lenght and breadth for 2nd rectrangle"<<endl;
    cin>>c>>d;
    Add b1(c,d);
Add c1(a,b,c,d);





}







