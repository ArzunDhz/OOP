___________________________________1_________________________________-
#include <iostream>
using namespace std;

class Complex{
private:
    int real,imaginary;
public:
    int getdata(int a, int b){

    real = a;
    imaginary = b ;
    }

    int putdata(){
    cout<<real<<"+"<<imaginary<<"i"<<endl;
    }

  Complex sum(Complex c1,Complex c2){
              Complex c3;
              c3.real= c1.real+c2.real;
              c3.imaginary=c1.imaginary+c2.imaginary;

               return c3;
               }
};




int main(){
Complex C1,C2,C3;
int a,b,c,d;
cout<<"input real and imaginary for 1st:";
cin>>a>>b;
C1.getdata(a,b);
C1.putdata();
cout<<"input real and imaginary for 2nd:";
cin>>c>>d;
C2.getdata(c,d);
C2.putdata();


C3=C3.sum(C1,C2);
cout<<"Sum of i  real and imaginary  is ";
C3.putdata();





}


________2_______________________________________




#include <iostream>
#include <string.h>
using namespace std;

int c = 0;

class Account{
private:
int no,balance;

public:
void getdata(int a ,int b);
void display();
Account recieve(Account &a1, Account &a2);
Account send(Account &a1, Account &a2);
};


  void Account::getdata(int a ,int b){
  no = a;
  balance = b;
  display();
    }

  void Account::display(){
   cout<<"  Account no =  "<<no<<" balance = "<<balance<<endl;
}



Account Account ::send(Account &a1, Account &a2){
Account a4;
a4.balance=a1.balance;
 a4.no=a1.no;
if(a1.balance>=c){
 a4.balance=a1.balance-c;

    return a4;
}
else{
  cout<<"insuffient funds so there is no tranjaation"<<endl;
   return a4;
}

}

Account Account :: recieve(Account &a1, Account &a2){
Account a3;
a3.balance=a2.balance;
a3.no=a2.no;
if(a1.balance>=c){
a3.balance=a2.balance + c;
return a3;
}
else{
  return a3;

}
}

int main(){
Account A1,A2,A3,A4;
int m;
A1.getdata(1,50);
A2.getdata(2,25);
cout<<"money u want to send from 1st account to second account = ";
cin>>m;
c=m;
A4=A4.send(A1,A2);
A4.display();
A3=A3.recieve(A1,A2);
A3.display();
}

_________________________________________3___________________________________
#include<iostream>
using namespace std;

class Test{
private:
    int code,price;
public:

    int display(){
    cout<<"code = " <<code<<"\t price = "<<price<<endl;
    }


Test(int x , int y){
   code=x;
   price=y;
   display();

}
Test(Test &a){
code=a.code;
price=a.price;
display();
}



};

int main(){
cout<<"before copying"<<endl;
Test obj1(5,6);
cout<<"after copying"<<endl;
Test obj2=obj1;
}

__________________________4______________________________________________

#include<iostream>
using namespace std;

class Rectangle{
private:
    int lenght, breadth;
public:

    Rectangle(){
    lenght=0;
    breadth=0;
    display();

    }

    Rectangle(int a){
    lenght=a;
    breadth=5;
    display();
    }

    Rectangle(int a , int b ){
    lenght=a;
    breadth=b;
    display();
    }


    int display(){
    cout<<"area = "<<lenght*breadth<<endl;

    }

};
int main(){

    Rectangle A;
    Rectangle B(5,6);
    Rectangle C(5);

}
____________________________________5_______________________________________
#include<iostream>
using namespace std;
class AddAmount{
private:
 int amount;
public:
    AddAmount(){
    amount = 50;
    display();
    }
    AddAmount(int a ){
    amount=50;
    amount = amount+ a;
    display();
    }

    int display(){
    cout<<"the amount in the piggy bank = "<<amount<<endl;\
        }


};

int main(){
AddAmount A;
AddAmount B(70);

}
________________________________________6______________________________
#include<iostream>
using namespace std;
class Rectangle{
private:
    int length, breadth;
public:
    int getlenght(){
    cout<<"input value of lenght"<<endl;
    cin>>length;

    }
    int getbreadth(){
    cout<<"input the value of breadth = "<<endl;
    cin>>breadth;
    }

    int area( Rectangle A){
    cout<<"area = "<<length*A.breadth<<endl;

    }
};

int main(){
Rectangle L,B;
L.getlenght();
B.getbreadth();
L.area(B);

}


________________________________7_____________________________________

#include<iostream>
#include<string.h>
using namespace std;

class Employee{
private:
    int id,salary;
    char name[10];
public:
int getdata(char a[10] , int b ,int c ){
strcpy(name,a);
id=b;
salary=c;
}
int display(){

cout<<" \n Name =  "<<name<<"  ID = "<<id<<"  salary = "<<salary<<endl;
}



};

int main(){

    Employee info[50],E;
    int n ;
    cout<<"no of employee = ";
    cin>>n;

for(int i = 0 ; i <n ;i++){
char a[10];
int c,b ;
cout<<"For employee no"<<i+1<<endl;
cout<<"Enter name = ";
cin>>a;
cout<<"Enter id =";
cin>>b;
cout<<"enter salary =";
cin>>c;
info[i].getdata(a,b,c);
}



for( int i= 0 ;i<n; i++){

info[i].display();


}

}
_________________8__________________________________________

#include<iostream>

using namespace std;


class Add {
private:
    int lenght , breadth ,area;
public:
    Add(int a , int b ){
    lenght=a;
    breadth=b;
    display();
    }

     Add(int a , int b, int c , int d ){
    area=2*(a+b)+2*(c+d);
    display2();
    }

    int display(){
    cout<<" area is"<<2*(lenght+breadth)<<endl;
    }
    int display2(){
    cout<<" SUm of the area is"<<area<<endl;
    }
};

int main(){
    int a,b,c,d;
    cout<<"input lenght and breadth for 1st rectrangle"<<endl;
    cin>>a>>b;
    Add a1(a,b);
    cout<<"input lenght and breadth for 2nd rectrangle"<<endl;
    cin>>c>>d;
    Add b1(c,d);
Add c1(a,b,c,d);





}








// extraaaaa ________________________________________________________

#include<iostream>
#include<string.h>
using namespace std;

class Account{
private:
    char name[10];
    int no , balance;
public:
    int getdata(char a[10] , int b ,int c );
    int display();
};

int Account::getdata(char a[10] , int b ,int c ){
strcpy(name,a);
no=b;
balance=c;
}

int Account::display(){
cout<<"\n";
cout<<"  Name =  "<<name<<"  Acc_no =  "<<no<<"  balance = "<<balance<<"$"<<endl;
}


int main(){
Account info[5];
char a[10];
int b,c;
int n ;
cout<<"no of customer =";
cin>>n;
for(int i=0;i<n;i++)
{
cout<<"for costumer"<<i+1<<endl;
   cout<<"input name = ";
   cin>>a;
   cout<<"account number = ";
   cin>>b;
   cout<<"balance = ";
   cin>>c;

   info[i].getdata(a,b,c);
}

for(int i = 0 ; i<n;i++){
    info[i].display();
}

#include <iostream>
#include <string.h>
using namespace std;
class Time{
private:
int hr,min;

public:
void getdata(int a ,int b);
void display();
Time sum(Time, Time);
};


  void Time::getdata(int a ,int b){
 hr = a;
 min = b;
  display();
    }

  void Time::display(){
   cout<<"  hr =  "<<hr<<" min= "<<min<<endl;
}

Time Time::sum(Time t1, Time t2){
Time t3;
t3.hr=t1.hr+t2.hr;
t3.min=t1.min+t2.min;
if(t3.min>=60){
    t3.hr=t3.hr+t3.min/60;
    t3.min=t3.min%60;
    return t3;
}
else{
    return t3;
}
}


int main(){
Time T1,T2,T3;
T1.getdata(1,50);
T2.getdata(2,25);
T3=T3.sum(T1,T2);
T3.display();

}




}
